<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.pingidentity.pingone.sample</groupId>
	<artifactId>PingOneApp</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>PingOneApp Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<!-- This allows us to use the test phase to set up the database but ensure 
		that it doesn't get blown away on subsequent launches, unless you really, 
		really want it to. To actually set up the db, you need to run mvn test -DskipTests=false 

	<properties>
		<skipTests>true</skipTests>
	</properties>-->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.jodd</groupId>
			<artifactId>jodd-props</artifactId>
			<version>3.4.10</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>com.pingidentity.tools</groupId>
			<artifactId>moustache</artifactId>
			<version>1.1.0</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>PingOneApp</finalName>
		<resources>
			<resource>
				<!-- Fix up the main properties file that generates all other properties 
					files -->
				<directory>templates</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.template</exclude>
				</excludes>
			</resource>
		</resources>
		<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.1.0.v20131115</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<jettyXml>etc/jetty.xml,etc/jetty-http.xml,etc/jetty-ssl.xml,etc/jetty-https.xml</jettyXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>app_properties</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<includeProjectDependencies>true</includeProjectDependencies>
							<includePluginDependencies>true</includePluginDependencies>
							<mainClass>com.pingidentity.tools.moustache.Main</mainClass>
							<arguments>
								<argument>-template</argument>
								<argument>${basedir}/templates/app.properties.template</argument>
								<arguement>-props</arguement>
								<arguement>${project.build.outputDirectory}/template.properties</arguement>
								<arguement>-out</arguement>
								<arguement>${project.build.outputDirectory}/${project.artifactId}.properties</arguement>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>app_sql</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<includeProjectDependencies>true</includeProjectDependencies>
							<includePluginDependencies>true</includePluginDependencies>
							<mainClass>com.pingidentity.tools.moustache.Main</mainClass>
							<arguments>
								<argument>-template</argument>
								<argument>${basedir}/templates/create_tables.sql.template</argument>
								<arguement>-props</arguement>
								<arguement>${project.build.outputDirectory}/template.properties</arguement>
								<arguement>-out</arguement>
								<arguement>${project.build.outputDirectory}/create_tables.sql</arguement>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>hypersql_setup</id>
						<phase>process-resources</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<includeProjectDependencies>true</includeProjectDependencies>
							<includePluginDependencies>true</includePluginDependencies>
							<mainClass>com.pingidentity.tools.moustache.Main</mainClass>
							<arguments>
								<argument>-template</argument>
								<argument>${basedir}/templates/create_tables.sql.template</argument>
								<arguement>-props</arguement>
								<arguement>${project.build.outputDirectory}/template.properties</arguement>
								<arguement>-out</arguement>
								<arguement>${project.build.outputDirectory}/create_tables.sql</arguement>
							</arguments>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.pingidentity.tools</groupId>
						<artifactId>moustache</artifactId>
						<version>1.1.0</version>
					</dependency>
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>2.3.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- SQL Plugin to establish the HyperSQL db instance -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<!-- specify the dependent jdbc driver here -->
					<dependency>
						<groupId>org.hsqldb</groupId>
						<artifactId>hsqldb</artifactId>
						<version>2.3.1</version>
					</dependency>
				</dependencies>

				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>org.hsqldb.jdbcDriver</driver>
					<url>jdbc:hsqldb:file:${project.build.outputDirectory}/database/db</url>
					<username>SA</username>
					<password>2Federate</password>
					<!--all executions are ignored if -Dmaven.test.skip=true -->
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>

                    <execution>
                        <id>create-db</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>jdbc:hsqldb:file:${project.build.outputDirectory}/database/db</url>
              <!-- no transaction -->
                            <autocommit>true</autocommit>
                            <sqlCommand>CREATE SCHEMA db AUTHORIZATION DBA</sqlCommand>
                        </configuration>
                    </execution>
					<execution>
						<id>create-tables</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:hsqldb:file:${project.build.outputDirectory}/database/db</url>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${project.build.outputDirectory}/create_tables.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
